{"resourceType":"Library","id":"AntidepressantMedicationManagementFHIR","extension":[{"url":"http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem","valueReference":{"reference":"Device/cqf-tooling"}}],"url":"http://ecqi.healthit.gov/ecqms/Library/AntidepressantMedicationManagementFHIR","version":"0.0.001","name":"AntidepressantMedicationManagementFHIR","content":[{"contentType":"text/cql","data":""}]}